/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.zipj.bls;

public class ZIPJBLS {
  public static boolean objectEquals(ChainCode a, ChainCode b) {
    return ZIPJBLSJNI.objectEquals__SWIG_0(ChainCode.getCPtr(a), a, ChainCode.getCPtr(b), b);
  }

  public static boolean objectEquals(G1Element a, G1Element b) {
    return ZIPJBLSJNI.objectEquals__SWIG_1(G1Element.getCPtr(a), a, G1Element.getCPtr(b), b);
  }

  public static G1Element add(G1Element a, G1Element b) {
    return new G1Element(ZIPJBLSJNI.add__SWIG_0(G1Element.getCPtr(a), a, G1Element.getCPtr(b), b), true);
  }

  public static GTElement andOperator(G1Element a, G2Element b) {
    return new GTElement(ZIPJBLSJNI.andOperator(G1Element.getCPtr(a), a, G2Element.getCPtr(b), b), true);
  }

  public static boolean objectEquals(G2Element a, G2Element b) {
    return ZIPJBLSJNI.objectEquals__SWIG_2(G2Element.getCPtr(a), a, G2Element.getCPtr(b), b);
  }

  public static G2Element add(G2Element a, G2Element b) {
    return new G2Element(ZIPJBLSJNI.add__SWIG_1(G2Element.getCPtr(a), a, G2Element.getCPtr(b), b), true);
  }

  public static boolean objectEquals(GTElement a, GTElement b) {
    return ZIPJBLSJNI.objectEquals__SWIG_3(GTElement.getCPtr(a), a, GTElement.getCPtr(b), b);
  }

  public static GTElement multiply(GTElement a, GTElement b) {
    return new GTElement(ZIPJBLSJNI.multiply__SWIG_0(GTElement.getCPtr(a), a, GTElement.getCPtr(b), b), true);
  }

  public static boolean objectEquals(PrivateKey a, PrivateKey b) {
    return ZIPJBLSJNI.objectEquals__SWIG_4(PrivateKey.getCPtr(a), a, PrivateKey.getCPtr(b), b);
  }

  public static G1Element multiply(G1Element a, PrivateKey k) {
    return new G1Element(ZIPJBLSJNI.multiply__SWIG_1(G1Element.getCPtr(a), a, PrivateKey.getCPtr(k), k), true);
  }

  public static G1Element multiply(PrivateKey k, G1Element a) {
    return new G1Element(ZIPJBLSJNI.multiply__SWIG_2(PrivateKey.getCPtr(k), k, G1Element.getCPtr(a), a), true);
  }

  public static G2Element multiply(G2Element a, PrivateKey k) {
    return new G2Element(ZIPJBLSJNI.multiply__SWIG_3(G2Element.getCPtr(a), a, PrivateKey.getCPtr(k), k), true);
  }

  public static G2Element multiply(PrivateKey k, G2Element a) {
    return new G2Element(ZIPJBLSJNI.multiply__SWIG_4(PrivateKey.getCPtr(k), k, G2Element.getCPtr(a), a), true);
  }

  public static boolean objectEquals(ExtendedPublicKey a, ExtendedPublicKey b) {
    return ZIPJBLSJNI.objectEquals__SWIG_5(ExtendedPublicKey.getCPtr(a), a, ExtendedPublicKey.getCPtr(b), b);
  }

  public static boolean objectEquals(ExtendedPrivateKey a, ExtendedPrivateKey b) {
    return ZIPJBLSJNI.objectEquals__SWIG_6(ExtendedPrivateKey.getCPtr(a), a, ExtendedPrivateKey.getCPtr(b), b);
  }

  public static PrivateKey privateKeyShare(PrivateKeyVector sks, byte[] id) {
    return new PrivateKey(ZIPJBLSJNI.privateKeyShare(PrivateKeyVector.getCPtr(sks), sks, id), true);
  }

  public static G1Element publicKeyShare(G1ElementVector pks, byte[] id) {
    return new G1Element(ZIPJBLSJNI.publicKeyShare(G1ElementVector.getCPtr(pks), pks, id), true);
  }

  public static G2Element signatureShare(G2ElementVector sks, byte[] id) {
    return new G2Element(ZIPJBLSJNI.signatureShare(G2ElementVector.getCPtr(sks), sks, id), true);
  }

  public static G2Element sign(PrivateKey privateKey, byte[] vecMessage) {
    return new G2Element(ZIPJBLSJNI.sign(PrivateKey.getCPtr(privateKey), privateKey, vecMessage), true);
  }

  public static boolean verify(G1Element pubKey, byte[] vecMessage, G2Element signature) {
    return ZIPJBLSJNI.verify(G1Element.getCPtr(pubKey), pubKey, vecMessage, G2Element.getCPtr(signature), signature);
  }

  public static PrivateKey privateKeyRecover(PrivateKeyVector sks, Uint8VectorVector ids) {
    return new PrivateKey(ZIPJBLSJNI.privateKeyRecover(PrivateKeyVector.getCPtr(sks), sks, Uint8VectorVector.getCPtr(ids), ids), true);
  }

  public static G1Element publicKeyRecover(G1ElementVector sks, Uint8VectorVector ids) {
    return new G1Element(ZIPJBLSJNI.publicKeyRecover(G1ElementVector.getCPtr(sks), sks, Uint8VectorVector.getCPtr(ids), ids), true);
  }

  public static G2Element signatureRecover(G2ElementVector sigs, Uint8VectorVector ids) {
    return new G2Element(ZIPJBLSJNI.signatureRecover(G2ElementVector.getCPtr(sigs), sigs, Uint8VectorVector.getCPtr(ids), ids), true);
  }

}
