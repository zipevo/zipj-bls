/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.zipj.bls;

public class HDKeys {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected HDKeys(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HDKeys obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ZIPJBLSJNI.delete_HDKeys(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static PrivateKey keyGen(byte[] seed) {
    return new PrivateKey(ZIPJBLSJNI.HDKeys_keyGen(seed), true);
  }

  public static void iKMToLamportSk(byte[] outputLamportSk, byte[] ikm, long ikmLen, byte[] salt, long saltLen) {
    ZIPJBLSJNI.HDKeys_iKMToLamportSk(outputLamportSk, ikm, ikmLen, salt, saltLen);
  }

  public static void parentSkToLamportPK(byte[] outputLamportPk, PrivateKey parentSk, long index) {
    ZIPJBLSJNI.HDKeys_parentSkToLamportPK(outputLamportPk, PrivateKey.getCPtr(parentSk), parentSk, index);
  }

  public static PrivateKey deriveChildSk(PrivateKey parentSk, long index) {
    return new PrivateKey(ZIPJBLSJNI.HDKeys_deriveChildSk(PrivateKey.getCPtr(parentSk), parentSk, index), true);
  }

  public static PrivateKey deriveChildSkUnhardened(PrivateKey parentSk, long index) {
    return new PrivateKey(ZIPJBLSJNI.HDKeys_deriveChildSkUnhardened(PrivateKey.getCPtr(parentSk), parentSk, index), true);
  }

  public static G1Element deriveChildG1Unhardened(G1Element pk, long index) {
    return new G1Element(ZIPJBLSJNI.HDKeys_deriveChildG1Unhardened(G1Element.getCPtr(pk), pk, index), true);
  }

  public static G2Element deriveChildG2Unhardened(G2Element pk, long index) {
    return new G2Element(ZIPJBLSJNI.HDKeys_deriveChildG2Unhardened(G2Element.getCPtr(pk), pk, index), true);
  }

  public HDKeys() {
    this(ZIPJBLSJNI.new_HDKeys(), true);
  }

  public final static short HASH_LEN = ZIPJBLSJNI.HDKeys_HASH_LEN_get();
}
